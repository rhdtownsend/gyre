! Module  : sysmtx_factory_m
! Purpose : factory procedures for r_sysmtx_t and c_sysmtx_t types
!
! Copyright 2013-2015 Rich Townsend
!
! This file is part of GYRE. GYRE is free software: you can
! redistribute it and/or modify it under the terms of the GNU General
! Public License as published by the Free Software Foundation, version 3.
!
! GYRE is distributed in the hope that it will be useful, but WITHOUT
! ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
! or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
! License for more details.
!
! You should have received a copy of the GNU General Public License
! along with this program.  If not, see <http://www.gnu.org/licenses/>.

#:include 'gyre.inc'

module sysmtx_factory_m

   ! Uses

   use forum_m, only: RD

   use sysmtx_m
   use band_sysmtx_m
   use block_sysmtx_m
   use num_par_m

   use ISO_FORTRAN_ENV

   ! No implicit typing

   implicit none

  #:for S in DTYPE_SUFFIXES

      ! Interfaces

      interface sysmtx_${S}$
         module procedure sysmtx_${S}$_
      end interface sysmtx_${S}$

      ! Access specifiers

      public :: sysmtx_${S}$

  #:endfor

  ! Default access

  private

contains

   #:for T, S in zip(DTYPE_BASE_TYPES, DTYPE_SUFFIXES)

      function sysmtx_${S}$_(n, n_e, n_i, n_o, np) result(sm)

         integer, intent(in)              :: n
         integer, intent(in)              :: n_e
         integer, intent(in)              :: n_i
         integer, intent(in)              :: n_o
         type(num_par_t), intent(in)      :: np
         class(sysmtx_${S}$), allocatable :: sm

         ! Construct the sysmtx type

         select case (np%matrix_type)
         case ('BAND')
            allocate(sm, SOURCE=band_sysmtx_${S}$(n, n_e, n_i, n_o))
         case ('BLOCK')
            allocate(sm, SOURCE=block_sysmtx_${S}$(n, n_e, n_i, n_o))
         case default
            @:ABORT('invalid matrix_type')
         end select

         ! Finish

         return

      end function sysmtx_${S}$_

   #:endfor

end module sysmtx_factory_m
